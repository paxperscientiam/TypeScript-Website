{"version":3,"sources":["webpack:///../src/utils.ts","webpack:///../src/index.ts","webpack:///../src/validation.ts","webpack:///../typescript-vfs/dist/index.js","webpack:////home/runner/work/TypeScript-Website/TypeScript-Website/node_modules/path-browserify/index.js","webpack:////home/runner/work/TypeScript-Website/TypeScript-Website/node_modules/ts-debounce/dist/src/index.js"],"names":["parsePrimitive","value","type","hasLocalStorage","hasProcess","log","localStorage","process","console","highlights","queries","nextContentOffset","contentOffset","removedLines","line","codeLines","moveForward","stripLine","i","highlightMatch","queryMatch","removePrettierIgnoreMatch","completionsQuery","start","kind","offset","text","docs","length","position","description","result","optMap","key","keys","Array","opt","name","opts","elementType","strings","getOptionValueFromMap","ts","booleanConfigRegexp","valuedConfigRegexp","defaultHandbookOptions","errors","noErrors","showEmit","showEmittedFile","noStaticSemanticInfo","emit","noErrorValidation","twoslasher","code","extension","options","require","lzstring","originalCode","safeExtension","types","typesToExtension","defaultFileName","defaultCompilerOptions","strict","target","allowJs","validateInput","cleanMarkdownEscaped","handbookOptions","match","filterHandbookOptions","compilerOptions","setOption","filterCompilerOptions","getRoot","path","rootPath","useFS","vfs","system","createSystem","createFSBackedSystem","fsRoot","env","createVirtualTypeScriptEnvironment","ls","partialQueries","nameContent","splitTwoslashCodeInfoFiles","sourceFiles","filenames","nc","file","filename","filetype","allowJSON","newFileCode","updates","filterHighlightLines","lspedQueries","string","index","sourceFile","q","quickInfo","token","arr","dp","d","word","str","pos","String","Number","left","right","startPos","getClosestWord","lastDot","prefix","completions","completionPrefix","newEditedFileCode","allCodeLines","f","output","errs","staticQuickInfos","source","fileContentStartIndexInModifiedFile","linesAbove","textSpans","child","span","checkChildren","getIdentifierTextSpans","identifier","targetString","burnerSourceFile","character","completionsPrefix","relevantErrors","e","inErrsButNotFoundInTheHeader","errorsFound","codeToAdd","postfix","afterMessage","msg","validateCodeForErrors","err","codeWhereErrorLives","renderedMessage","id","category","emitFilename","emitSourceFilename","emitSource","allFiles","o","playgroundURL","cutIndex","lineOffset","info","s","highlight","lines","nameForFile","currentFileContent","fileMap","root","n","error","debugLog","getItem","DEBUG","_message","knownLibFilesForCompilerOptions","array","lib","files","targetToCut","ScriptTarget","ES5","matches","filter","startsWith","toLowerCase","targetCutIndex","indexOf","pop","libCutIndex","map","reduce","max","current","finalCutIndex","Math","slice","addAllFilesFromFolder","workingDir","fs","walk","dir","results","readdirSync","forEach","join","stat","statSync","isDirectory","concat","push","fsPath","replace","content","readFileSync","includes","extname","set","notImplemented","methodName","Error","audit","fn","args","res","smallres","getDefaultCompilerOptions","jsx","JsxEmit","React","esModuleInterop","module","ModuleKind","ESNext","suppressOutputPathCheck","skipLibCheck","skipDefaultLibCheck","moduleResolution","ModuleResolutionKind","NodeJs","libize","createVirtualCompilerHost","sys","Map","compilerHost","getCanonicalFileName","fileName","getDefaultLibFileName","getDirectories","getNewLine","newLine","getSourceFile","get","createSourceFile","readFile","useCaseSensitiveFileNames","updateFile","alreadyExists","has","writeFile","createVirtualLanguageServiceHost","rootFiles","customTransformers","fileNames","fileVersions","projectVersion","languageServiceHost","getProjectVersion","toString","getCompilationSettings","getCustomTransformers","getScriptFileNames","getScriptSnapshot","contents","ScriptSnapshot","fromString","getScriptVersion","version","cache","fetcher","storer","fetchlike","fetch","storelike","fsMap","Object","removeItem","Promise","all","cacheKey","resolve","decompressFromUTF16","then","resp","setItem","t","compressToUTF16","tsModule","libs","dirname","_projectRoot","nodeSys","tsLib","createDirectory","directoryExists","from","some","directory","exit","fileExists","tsLibName","getCurrentDirectory","getExecutingFilePath","readDirectory","resolvePath","write","mergedCompilerOpts","languageService","createLanguageService","diagnostics","getCompilerOptionsDiagnostics","formatDiagnostics","getProgram","createFile","optPrevTextSpan","prevSourceFile","prevFullContents","prevTextSpan","createTextSpan","newText","newSourceFile","updateSourceFile","newLength","exports","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","xs","resolvedPath","resolvedAbsolute","arguments","cwd","TypeError","charAt","split","p","normalize","isAbsolute","trailingSlash","substr","paths","prototype","call","relative","to","trim","end","fromParts","toParts","min","samePartsLength","outputParts","sep","delimiter","charCodeAt","hasRoot","matchedSlash","basename","ext","startDot","startPart","preDotState","len","debounce","isImmediate","a","this","m","clearTimeout","setTimeout","apply"],"mappings":"+ZAIA,SAmBgBA,EAAeC,EAAeC,G,OAC5C,G,IACE,S,OACE,E,IACF,S,OACE,E,IACF,U,MACSD,0BAAP,IAAyCA,S,MAGvC,iDAAN,GCjCF,IAAKE,GAAL,EACA,IACEA,sBAAkB,aAClB,UACF,IAAMC,OAAN,IAAmB,EAqBbC,EApBeF,GAAmBG,qBAApB,UAAuDF,GAAcG,GAAzF,MAoB0BC,QAAH,IAAiB,Y,MAAA,IAgDxC,c,QACQC,EAAN,GACOC,EAAP,GAEIC,EAAJ,EACKC,EAAL,EACKC,EAAL,E,kBAGQC,EAAOC,EAAb,GACMC,EAAc,WAClBJ,IACAD,GAAqBG,SAArBH,GAGIM,EAAY,YAChBZ,EAAG,2BAAHA,GAEAQ,IACAE,cACAG,K,GAIGJ,WAAL,MAEO,C,IACCK,EAAiB,6BAAvB,GACMC,EAAa,2BAFd,GAICC,EAA4B,iCAAlC,GACMC,EAAmB,wBAAzB,G,GAEA,OAAIF,EAAqB,C,IACjBG,EAAQT,UAAd,KACAJ,OAAa,CAAEc,KAAF,QAAiBC,OAAjB,EAAgCC,UAAhC,EAAiDC,UAAjD,EAAkEb,KAAMI,IAAmB,IACxGD,yBACK,UAAIE,EAAyB,C,IAC5BI,EAAQT,UAAd,KACMc,EAASd,qBAAf,EACMe,EAAWjB,EAAjB,EACMkB,EAAcX,KAAoBA,KAApBA,OAApB,GACAV,OAAgB,CAAEe,KAAF,YAAqBK,SAArB,EAA+BD,OAA/B,EAAuCE,YAAvC,EAAoDhB,KAAMI,IAC1ED,6BACK,UAAII,EACTJ,kCACK,UAAIK,EAA2B,C,IAC9BC,EAAQT,UADsB,KAGpCJ,OAAa,CAAEc,KAAF,aAAsBC,OAAtB,EAAqCC,UAArC,EAAsDC,UAAtD,EAAuEb,KAAMI,IAAmB,IAC7GD,oCAEAD,SA3BFA,I,KAjBME,EAAV,EAAgBA,EAAIH,EAApB,OAAsCG,I,EAA7BA,G,MAgDF,CAAET,WAAF,EAAcC,WAGvB,kB,IACQqB,EAASC,MAAWC,EAA1B,e,GACA5B,EAAG,qCAAHA,QACA,IAAI0B,EAAsB,C,IAClBG,EAAOC,WAAWH,EAAxB,Q,MACM,4DAA+DE,OAArE,M,OAED,EAGH,oBACE7B,EAAG,oBAAHA,G,mHAEW+B,I,GACLA,uBAA2BC,EAA/B,cAAmD,C,OACzCD,EAAR,M,IACE,S,IACA,S,IACA,UACEE,EAAKF,EAALE,MAAiBtC,EAAc,EAAQoC,EAAvCE,M,UAGF,O,IACQC,EAAcH,UAApB,KACMI,EAAUvC,QAAhB,KAEEqC,EAAKF,EAALE,MADF,iBAAI,EACe,OAAY,Y,OAAKtC,EAAc,EAAlB,MAEb,OAAY,Y,OAAKyC,EAAsBL,EAAD,OAAzB,M,kBAM1BJ,EAASI,EAAf,KACAE,EAAKF,EAALE,MAAiBG,EAAsBL,EAAD,OAAtCE,G,mBAtBR,MAAkBI,EAAlB,0C,EAAA,iCAAyC,C,0FA6BnC,0CAAN,aAGF,IAAMC,EAAN,kBAGMC,EAAN,0BAkDA,IAAMC,EAAkD,CACtDC,OADsD,GAEtDC,UAFsD,EAGtDC,UAHsD,EAItDC,qBAJsD,EAKtDC,sBALsD,EAMtDC,MANsD,EAOtDC,mBAAmB,GA0IrB,SAAgBC,EAAWC,EAAcC,EAAmBC,G,eAAAA,UAA2B,I,IAC/Ed,EAAE,UAAOc,EAAP,wBAA2BC,EAAnC,GACMC,EAAQ,UAAOF,EAAP,8BAAiCC,EAA/C,GAEME,EAAN,EACMC,EDlVR,SAAiCC,G,OAC/B,G,IACE,K,IAEA,a,MACE,K,IACF,K,IAEA,a,MACE,K,IACF,M,MACE,M,IACF,M,MACE,O,MAEE,UAAU,oCAAhB,GCmUsBC,CAAtB,GACMC,EAAkB,SAAxB,EAEA1D,EAAG,sCAAHA,W,IAEM2D,EAAsB,GAC1BC,QAD0B,EAE1BC,OAAQxB,eAFkB,OAG1ByB,SAAS,GAHiB,Q,EAItBX,EAJsB,sCAA5B,KClWF,SAA8BF,G,GACxBA,WAAJ,e,MACQ,UAAN,+D,GAEEA,WAAJ,iB,MACQ,UAAN,mEDoWFc,I,IAKMrD,GAHNuC,EDtWF,SAAqCA,G,OAEnCA,GADAA,EAAOA,gBAAPA,MACOA,cAAPA,KCoWOe,CAAPf,IAGkBA,MAAlB,aAEMgB,EAAe,KA/JvB,Y,QACQd,EAAO,KAAb,GACStC,EAAT,EAAgBA,EAAIH,EAApB,OAAsCG,IAAK,C,IACrCqD,OAAK,GACJA,EAAQ5B,OAAyB5B,EAAtC,KACMwD,OAAJ,IACEf,EAAQe,EAARf,OACAnD,EAAG,mBAAoBkE,EAApB,GAAHlE,YACAU,cACAG,MAEQqD,EAAQ3B,OAAwB7B,EAArC,MACDwD,OAAJ,IACEf,EAAQe,EAARf,IAAoBe,EAApBf,GACAnD,EAAG,mBAAoBkE,EAApB,UAAmCA,EAAtClE,IACAU,cACAG,K,MAMF,cAAJ,iBAAkCsC,EAAP,SACzBA,SAAiBA,wBAAjBA,QACAnD,EAAG,4BAA8BmD,EAAjCnD,SAGF,EAoI6BmE,CAAR,MAA6ChB,EAAlE,gBACMiB,EA1NR,gB,QACQjB,EAAO,KAAb,GACStC,EAAT,EAAgBA,EAAIH,EAApB,QAAwC,C,IAClCwD,OAAK,E,GACJA,EAAQ5B,OAAyB5B,EAAtC,IACEyC,EAAQe,EAARf,OACAkB,EAAUH,EAAD,YAATG,OACK,MAAKH,EAAQ3B,OAAwB7B,EAArC,KAOA,CACLG,I,YANA,aAAIqD,KAAyB,CAC3BrD,I,SAGFwD,EAAUH,EAAD,GAAWA,EAAX,KAATG,GAKF3D,c,OAEF,EAsMwB4D,CAAqB,IAA7C,GAGKL,EAAL,kBACEA,kBACEG,OAAuBA,QAAwB/B,UAA/C+B,qBADFH,Y,IAIKM,EAAS,W,IACRC,EAAOpB,EAAb,Q,OACiBD,WAAmBjD,EAApC,OACOuE,MAAeD,EAAfC,UAA8BD,QAArC,MAIIE,IAAUvB,EAAhB,MACMwB,EAAMD,GAASvB,EAATuB,MAAyBvB,EAAzBuB,MAAyC,IAApD,IACME,EAAQF,EAAQG,uBAAH,GAAuBC,+BAAoB,EAAMP,IAArE,GACOQ,EAAQL,EAAK,IAASH,IAA7B,IAEOS,EAAKC,6CAAkC,SAAkC9B,EAAhF,oBACM+B,EAAKF,EAAX,gBAEA/B,EAAOvC,OAAPuC,M,IAEIkC,EAAJ,GACI9E,EAAJ,GACID,EAAJ,GAEMgF,EAAcC,EAA0B,IAA9C,GACOC,EAAa,iBAApB,OAGMC,EAAY,OAAgB,Y,OAAMC,EAAJ,M,uHAEzBC,IACFC,EAAuBD,KAAb/E,EAAa+E,KACxBE,EAAWD,oBAAjB,GAGME,EAAYxB,qBAAlB,SAAuDuB,E,IAClDL,WAAD,KAAJ,E,qBAKMO,EAAcnF,OAApB,MACAsE,kB,IAEMc,EAAUC,EAAhB,I,EACA3F,gBAAmB0F,EAAnB1F,Y,IAIM4F,EAAe,eAAoB,c,ID1XXC,EAAgBC,EC2XrCC,EAAYnB,gBAAnB,GACMxD,EAAWa,kCAA6C+D,EAA7C/D,KAAqD+D,EAAtE,Q,OACQA,EAAR,M,IACE,Q,IACQC,EAAYnB,2BAAlB,GACMoB,EAAQpB,4BAFF,GAKR7D,EAAI,6BDlYJ,EADoB4E,ECmYkCjB,mBAAD,ODnYjBkB,ECmYxC,GDlYI,GAEVD,EAAOC,EAFG,GAGVD,EAAOC,EAHG,OAKVD,EALU,OAOVA,EAAOC,EAPG,GAQVD,EAAOC,EARG,GASVD,EAAOC,EATT,IAWOK,qBAAP,ICwXYjF,OAAJ,E,OAEI+E,MAAsBA,EAA1B,eACEhF,EAAO,oBAA2B,Y,OAAMmF,EAAJ,QAA7B,KAAPnF,IACAC,EAAO+E,gBAA0B,qBAA4B,Y,OAAKI,EAAJ,QAA7B,KAA1BJ,cAAP/E,GAGuC,CACvCH,KADuC,QAEvCE,KAFuC,EAGvCC,KAHuC,EAIvCb,KAAM2F,OAJiC,EAKvChF,OAAQgF,EAL+B,OAMvCX,KAAMC,G,IAKV,a,IACQW,EAAYnB,6BAAsC1D,EAAtC0D,EAAlB,I,IACI,IAAejB,EAAnB,kB,MACQ,4CAA4CmC,EAA5C,cAAN,mC,IAGIM,ED5YhB,SAA+BC,EAAaC,GAE1CD,EAAME,OAANF,GACAC,EAAME,YAANF,E,IAGIG,EAAOJ,UAAaC,EAAbD,UAAX,QACEK,EAAQL,kBADV,M,OAIIK,EAAJ,EACS,CACLN,KAAMC,QADD,GAELM,SAAUF,GAIP,CACLL,KAAMC,UAAgBK,EADjB,GAELC,SAAUF,GCyXSG,CAAef,EAAD,KAAkB3E,EAA7C,GAEM2F,EADShB,aAAsBO,EAAtBP,SAAf,GACgBiB,kBAAhB,G,MAE8C,CAC5CjG,KAD4C,cAE5CkG,aAAa,2BAF+B,GAG5CC,iBAH4C,EAI5C7G,KAAM2F,OAJsC,EAK5ChF,OAAQgF,EALoC,OAM5CX,KAAMC,Q,EAMdP,mB,IAGMoC,EAAoB7G,OAA1B,MACAsE,mBAzEF,+B,EAAA,iCAAgC,C,mEA6E1BwC,EAAevE,QAArB,aACA8C,KACA9C,EAAOuE,OAAPvE,MAGIgB,EAAJ,MACEsB,WAAkB,Y,IACTI,EAAU8B,oBAAjB,GACKnC,WAAL,IAEeJ,gBAAf,GACAwC,qBAA2B,YACzB9C,YAAiB8C,EAAjB9C,KAA8B8C,EAA9B9C,Y,IAMA+C,EAAN,GAEIC,EAAJ,GAKArC,WAAkB,Y,IACVI,EAAWF,oBAAjB,G,GAGKH,WAAL,G,CAIKrB,EAAL,WACE0D,eAAazC,yBAAbyC,IACAA,eAAazC,0BAAbyC,K,IAGIE,EAAS7C,eAAf,GACMmB,EAAanB,gBAAnB,G,IACA,EAAiB,MAAM,uCAAN,gB,IAGZf,EAAL,SAA+B,C,IACvB6D,GAAsC7E,kBAAiCA,UAA7E,GACM8E,EAAa9E,gCAFU,E,EAKTgB,0BDpf1B,SAAuC5B,EAAiC8D,G,IAChE6B,EAAN,G,gBAIA,KACE3F,kBAAsB,SAAA4F,G,GAChB5F,eAAJ,GAA4B,C,IACpBnB,EAAQ+G,cAAd,GACAD,OAAe,CAAEE,KAAM7F,mBAAyB4F,MAAjC,GAAqD5G,KAAM4G,eAE5EE,QATJA,IACA,ECifoEC,CAAsB,EAAtF,GACA,uB,IAAA,6BAAsC,C,wFAA3BC,EAA2B,EAC9BH,EAAOG,EAAb,KACMhC,EAAYnB,2BAAgCgD,EAAlD,O,GAEI7B,GAAaA,EAAjB,aAAyC,C,IACjChF,EAAO,oBAA2B,Y,OAAMmF,EAAJ,QAA7B,KAAb,IACM8B,EAAeD,EAArB,KACM/G,EAAO+E,gBAA0B,qBAA4B,Y,OAAKI,EAAJ,QAA7B,KAA1BJ,WAH0B,EAMjC7E,EAAW0G,QANsB,EAQjCK,EAAmBlG,4BAAkCA,eAA3D,Q,EAC4BA,kCATW,GAS/B5B,EAT+B,OASzB+H,EATyB,YAWvCZ,OAAsB,CAAEvG,KAAF,EAAQC,KAAR,EAAcJ,MAAd,EAA+BK,OAAQ2G,EAAvC,OAAoDzH,KAApD,EAA0D+H,UAA1D,EAAqEF,kBAO/FnD,UACU,Y,OAAYiB,SAAZ,KADVjB,SAEW,Y,IACDyB,EACJvE,kCAA6C+D,EAA7C/D,KAAqD+D,EAArD/D,QADF,E,OAGQ+D,EAAR,M,IACE,QACE/F,OAAa,CACXiB,KAAM8E,EADK,KAEXjF,KAFW,QAGXD,MAAO0F,EAHI,EAIXrF,OAAQ6E,OAJG,OAKX/E,KAAM+E,EALK,KAMXhF,OAAQgF,EANG,OAOX3F,KAAM2F,SAAsB,I,UAIhC,cACE/F,OAAa,CACXgH,YAAajB,EADF,YAEXjF,KAFW,cAGXD,MAAO0F,EAHI,EAIX6B,kBAAmBrC,EAJR,iBAKX7E,OALW,EAMXH,OAAQgF,EANG,OAOX3F,KAAM2F,SAAsB,a,IAQpCsC,EAAiB,UAAY,Y,OAAKC,QAAUpD,WAAmBoD,OAAjC,cAG/B1E,EAAD,mBAAsCyE,EAA1C,QC5mBF,SACEA,EACAzE,EACAf,EACAI,G,IAEMsF,EAA+BF,EAAA,QAAsB,SAAAC,G,OAAM1E,kBAAgC0E,EAArC,SACtDE,EAAcD,EAAA,KAAiC,SAAAD,G,OAAKA,EAAJ,QAAlC,KAApB,K,GAEIC,EAAJ,OAAyC,C,IACjCE,EAAS,eAAkBJ,EAAA,KAAmB,SAAAC,G,OAAKA,EAAJ,QAApB,KAAjC,KACMI,EAAU9E,+CACmBA,EADnBA,OAEZ,kBAFJ,EAIM+E,EAAeJ,EAAA,KACd,SAAAD,G,IACGM,EAAM,iBAAON,EAAP,YAAoCA,EAApC,YAAoDA,cAAhE,Y,UACWA,EAAX,iBAHiB,KAArB,Q,MAQM,kGADU,8BAAhB,WDulBAO,CAAqB,MAArBA,G,IAGEzG,EAAJ,G,EAGA,yB,IAAA,6BAAkC,C,wFAAvB0G,EAAuB,EAC1BC,GAAsBpE,eAAiBmE,OAA7C,UACMrB,GAAsC7E,UAA5C,IACMoG,GAA6BhH,+BAAgC8G,EAAhC9G,YAAnC,MDtnBKhB,aAAP,QCunBQiI,GAAE,OAAUH,EAAV,SAAsBA,EAAtB,UAAmCA,EAA3C,O,GAC4B9G,gCAAiC8G,EAAjC9G,KAA4C8G,EALxC,OAKxB1I,GALwB,QAKlB+H,GALkB,aAOhC/F,OAAY,CACV8G,SAAUJ,EADA,SAEVlG,KAAMkG,EAFI,KAGV5H,OAAQ4H,EAHE,OAIVjI,MAAOiI,QAAYA,QAAZA,QAJG,EAKV1I,KALU,GAMV+H,UANU,GAOVa,gBAPU,GAQVC,Q,GAKArF,EAAJ,SAA8B,C,IAEtBuF,GAAevF,mBAArB,EACMwF,GACJ1E,EAASyE,2EADX,IAGIE,GAAa,QAAe,Y,OAAKjC,IAAMgC,GAANhC,OAAoCA,IAAMgC,GAA9C,U,IAE7B,KAAgBrF,EAApB,QAA6C,C,IACrCuF,GAAWpE,OAD0B,M,MAGrC,4GAAN,IAIEnB,EAAJ,UACEsF,GAAanE,EAAbmE,I,IAGIhC,GAASxC,gBAAf,IACMO,GAAO,qBACX,Y,OAAKmE,SAAW7E,EAASd,EAApB2F,iBAAuDA,SAAW3F,EAAtE,mB,IAGH,GAAW,C,IACH0F,GAAW,oBAAuB,Y,OAAKC,EAAJ,QAAxB,KADR,M,MAGH,kCAAkC3F,EAAlC,mCAAmFc,EAASd,EAA5F,sCAAN,IAGFhB,EAAOwC,GAAPxC,KACAC,EAAYuC,mBA/BgB,MAmC5BrF,KACA+E,KACAyC,K,IAIIiC,GAAa,6CADAxG,gCAAnB,G,GAOIJ,WADJ,kBAC8B,C,IAEtB6G,GAAW7G,UAHnB,mCAGE,OACM8G,GAAa9G,kCAHS,EAM5BA,EAAOA,QAPT,kBAC8B,MAU5B2E,WAAyB,YACvBoC,YACAA,cAEFpC,EAAmB,UAAwB,Y,OAAKqC,SAAJ,KAE5CxH,WAAe,YACT0G,EAAJ,QAAeA,aACXA,EAAJ,OAAcA,eAEhB1G,EAAS,UAAc,Y,OAAKkG,SAAWA,SAAf,KAExBvI,WAAmB,YACjB8J,eACAA,cAGF9J,EAAa,UAAkB,Y,OAAKuI,YAAJ,KAEhCtI,WAAgB,Y,OAAM+F,QAAL,MACjB/F,EAAU,UAAe,Y,OAAK+F,QAAJ,K,MAGrB,CACLnD,KADK,EAELC,UAFK,EAGL9C,WAHK,EAILC,QAJK,EAKLuH,iBALK,EAMLnF,OANK,EAOLoH,kBAIJ,IAAMxE,EAA6B,gB,IAC3B8E,EAAQlH,QAAd,aAEImH,EAAcnH,wCAAlB,EACIoH,EAAJ,GACMC,EAAN,G,EAEA,yB,IAAA,6BAA0B,C,wFAAf7J,EAAe,EACpBA,WAAJ,mBACE6J,OAAa,CAACC,EAAD,EAAbD,IACAF,EAAc3J,6BAAd2J,OACAC,MAEAA,U,OAGJC,OAAa,CAACC,EAAD,EAAbD,IAKoB,UAAe,Y,OAAKE,gBAAoBA,eAAxB,KAA2CA,e,qUAhvBjF,IAAI1K,KACJ,IACEA,sBAAyBG,aACzB,MAAOwK,IAET,IAAM1K,WAAoBG,EAEpBwK,EADe5K,GAAmBG,aAAa0K,QAAQ,UAAc5K,GAAcG,GAAY0K,MACtEzK,QAAQH,IAAM,SAAC6K,SAA8C,IAmF/EC,EAAkC,SAAC1G,EAAkC/B,OAmEhE0I,EAjEVC,EAAM5G,EAAgB4G,KAAO,GAE7BC,EAAQ,CACZ,WACA,eACA,wBACA,qBACA,mCACA,sBACA,eACA,eACA,6BACA,uBACA,kBACA,4BACA,2BACA,0BACA,wBACA,0BACA,yBACA,mCACA,gCACA,kBACA,uBACA,kBACA,uBACA,uBACA,yBACA,+BACA,yBACA,8BACA,iCACA,gCACA,kBACA,uBACA,uBACA,0BACA,yBACA,wBACA,kBACA,uBACA,yBACA,yBACA,yBACA,kBACA,uBACA,yBACA,mCACA,yBACA,0BACA,+BACA,uBACA,wBACA,gCACA,yBACA,kBACA,uBACA,uBACA,0BAGIC,EAAc7I,EAAG8I,aA9DR/G,EAAgBP,QAAUxB,EAAG8I,aAAaC,KA+DnDC,EAAUJ,EAAMK,QAAO,mBAAK7D,EAAE8D,kBAAkBL,EAAYM,kBAC5DC,EAAiBR,EAAMS,QAAQL,EAAQM,OAcvCC,IAZUb,EAIUC,EAAIa,KAAI,gBAC1BR,EAAUJ,EAAMK,QAAO,mBAAK7D,EAAE8D,kBAAkBP,EAAIQ,yBACnC,IAAnBH,EAAQ9J,OAAqB,EAEhB0J,EAAMS,QAAQL,EAAQM,YAP9BZ,EAAMxJ,OAASwJ,EAAMe,QAAO,SAACC,EAAKC,UAAaA,EAAUD,EAAMC,EAAUD,cAWnC,EAE3CE,EAAgBC,KAAKH,IAAIN,EAAgBG,UACxCX,EAAMkB,MAAM,EAAGF,EAAgB,IA4B3BG,EAAwB,SAACP,EAA0BQ,OACxD7H,EAAOpB,EAAQ,QACfkJ,EAAKlJ,EAAQ,kBAEbmJ,EAAiBC,OACjBC,EAAoB,UACXH,EAAGI,YAAYF,GACvBG,SAAQ,SAAUlH,GACrBA,EAAOjB,EAAKoI,KAAKJ,EAAK/G,OAChBoH,EAAOP,EAAGQ,SAASrH,GACrBoH,GAAQA,EAAKE,cAEfN,EAAUA,EAAQO,OAAOT,EAAK9G,IAG9BgH,EAAQQ,KAAKxH,MAGVgH,GAhBU,CAmBGJ,GAEbM,SAAQ,gBACTO,EAAS,uBAAyBlC,EAAImC,QAAQd,EAAY,IAC1De,EAAUd,EAAGe,aAAarC,EAAK,QACb,CAAC,MAAO,QAEZsC,SAAS9I,EAAK+I,QAAQL,KACxCrB,EAAI2B,IAAIN,EAAQE,OA0FtB,SAASK,EAAeC,SAChB,IAAIC,iBAAiBD,2BAG7B,SAASE,EACP5L,EACA6L,UAEO,sCAAIC,iDACHC,EAAMF,eAAMC,GAEZE,EAA0B,iBAARD,EAAmBA,EAAI5B,MAAM,EAAG,IAAM,MAAQ4B,SACtErD,gBAAS,KAAO1I,UAAS8L,IACzBpD,EAAS,KAAOsD,GAETD,GAKX,IAAMpK,EAAyB,SAACtB,eAEzBA,EAAG4L,6BACNC,IAAK7L,EAAG8L,QAAQC,MAChBxK,QAAOA,EACPyK,iBAAgBA,EAChBC,OAAQjM,EAAGkM,WAAWC,OACtBC,yBAAwBA,EACxBC,cAAaA,EACbC,qBAAoBA,EACpBC,iBAAkBvM,EAAGwM,qBAAqBC,UAKxCC,EAAS,SAACvK,UAAiBA,EAAK2I,QAAQ,IAAK,SAAS3B,eA2G5D,SAAgBwD,EAA0BC,EAAa7K,EAAkC/B,OACjFiD,EAAc,IAAI4J,UAWF,CACpBC,aAAaA,EAAbA,GACKF,GACHG,qBAAsB,mBAAYC,GAClCC,sBAAuB,iBAAM,IAAMjN,EAAGiN,sBAAsBlL,IAE5DmL,eAAgB,iBAAM,IACtBC,WAAY,kBAAMP,EAAIQ,SACtBC,cAAe,mBAEXpK,EAAYqK,IAAIN,KApBVlJ,EAsBJ9D,EAAGuN,iBACDP,EACAJ,EAAIY,SAASR,GACbjL,EAAgBP,QAAUF,EAAuBtB,GAAIwB,WAxB/DyB,EAAYkI,IAAIrH,EAAWkJ,SAAUlJ,GAC9BA,GAFI,IAACA,GA+BV2J,0BAA2B,kBAAMb,EAAIa,6BAEvCC,WAAY,gBACJC,EAAgB1K,EAAY2K,IAAI9J,EAAWkJ,iBACjDJ,EAAIiB,UAAU/J,EAAWkJ,SAAUlJ,EAAW9E,MAC9CiE,EAAYkI,IAAIrH,EAAWkJ,SAAUlJ,GAC9B6J,aASGG,EACdlB,EACAmB,EACAhM,EACA/B,EACAgO,OAEMC,YAAgBF,KACepB,EAA0BC,EAAK7K,EAAiB/B,GAA7E8M,iBAAcY,eAChBQ,EAAe,IAAIrB,IACrBsB,EAAiB,QAyBE,CACrBC,yBAxBGtB,GACHuB,kBAAmB,kBAAMF,EAAeG,YACxCC,uBAAwB,kBAAMxM,GAC9ByM,sBAAuB,kBAAMR,GAC7BS,mBAAoB,kBAAMR,GAC1BS,kBAAmB,gBACXC,EAAW/B,EAAIY,SAASR,MAC1B2B,SACK3O,EAAG4O,eAAeC,WAAWF,IAIxCG,iBAAkB,mBACTZ,EAAaZ,IAAIN,IAAa,KAEvCa,UAAWjB,EAAIiB,YAUfH,WAAY,YACVS,IACAD,EAAa/C,IAAIrH,EAAWkJ,SAAUmB,EAAeG,YAChDL,EAAUhD,SAASnH,EAAWkJ,WACjCiB,EAAUrD,KAAK9G,EAAWkJ,UAE5BU,EAAW5J,4DA7TyB,SAAC0F,UACzCO,EAAsBP,EAAK,kDAcU,SACrC1I,EACAiO,EACAC,EACAhP,EACAgB,EACAiO,EACAC,OAEMC,EAAYF,GAAWG,MACvBC,EAAYH,GAAUtR,aACtB0R,EAAQ,IAAIzC,IACZjE,EAAQH,EAAgC3H,EAASd,GACjD+E,0CAAiDgK,4BAoD1CC,oBAjCEO,OAAO/P,KAAK5B,cACpB0M,SAAQ,YAEP/K,EAAI2J,WAAW,aAAe3J,EAAI2J,WAAW,UAAY6F,IAC3DM,EAAUG,WAAWjQ,MAIlBkQ,QAAQC,IACb9G,EAAMY,KAAI,gBAtBClF,EAuBHqL,YAAqBZ,MAAWpG,EAChCoC,EAAUsE,EAAU/G,QAAQqH,UAE7B5E,EASI0E,QAAQG,SAnCRtL,EAmCsByG,EAlC5B/J,EAAWA,EAAS6O,oBAAoBvL,GAAOA,IA2BzC6K,EAAUpK,EAAS4D,GACvBmH,MAAK,mBAAQC,EAAK/Q,UAClB8Q,MAAK,gBAlCHxL,SAmCD+K,EAAUW,QAAQL,GAnCjBrL,EAmC+B2L,EAlCnCjP,EAAWA,EAASkP,gBAAgB5L,GAAOA,IAmCjC2L,SAMfH,MAAK,YACLnB,EAASrE,SAAQ,SAACtL,EAAM6E,GAEtByL,EAAMnE,IADO,IAAMvC,EAAM/E,GACT7E,4BAnCbyQ,QAAQC,IAAI9G,EAAMY,KAAI,mBAAO2F,EAAUpK,EAAS4D,GAAKmH,MAAK,mBAAQC,EAAK/Q,cAAU8Q,MAAK,YAC3FnB,EAASrE,SAAQ,SAACtL,EAAM6E,UAAUyL,EAAMnE,IAAI,IAAMvC,EAAM/E,GAAQ7E,aAwCtD8Q,MAAK,kBAAMR,wCAzIoB,SAACvN,EAAkC/B,OAC1EmQ,EAAWnQ,GAAMe,EAAQ,GACzBoB,EAAOpB,EAAQ,QACfkJ,EAAKlJ,EAAQ,QAObqP,EAAO3H,EAAgC1G,EAAiBoO,GACxDb,EAAQ,IAAIzC,WAClBuD,EAAK9F,SAAQ,YACXgF,EAAMnE,IAAI,IAAMxC,EARH,SAAChJ,OACRgJ,EAAMxG,EAAKkO,QAAQtP,GAAgB,OAClCkJ,EAAGe,aAAa7I,EAAKoI,KAAK5B,EAAKhJ,GAAO,QAFhC,CAQegJ,OAEvB2G,0BAoMT,SAAqC1G,EAA4B0H,EAAsBtQ,OAG/EkI,EAAOoI,EAAe,OACtBnO,EAAOpB,EAAQ,QAGfwP,EAAUvQ,EAAG4M,IACb4D,EAAQrO,EAAKkO,QAAQtP,GAAgB,MAEpC,CACL0K,KAAM,GACNgF,gBAAiB,kBAAMrF,EAAe,oBAEtCsF,gBAAiBnF,EAAM,mBAAmB,mBACjC9L,MAAMkR,KAAK/H,EAAMpJ,QAAQoR,MAAK,mBAAQzO,EAAK+G,WAAW2H,OAAeN,EAAQG,gBAAgBG,MAEtGC,KAAMP,EAAQO,KACdC,WAAYxF,EAAM,cAAc,eAC1B3C,EAAMgF,IAAIZ,GAAW,OAAM,EAAC,GAE5BA,EAAS/B,SAAS,kBAAoB+B,EAAS/B,SAAS,iBAAkB,OAAM,EAAC,GACjF+B,EAAS9D,WAAW,QAAS,CAAC,IAC1B8H,EAAeR,MAASxD,EAASlC,QAAQ,IAAK,WAC7CyF,EAAQQ,WAAWC,UAErBT,EAAQQ,WAAW/D,MAE5BiE,oBAAqB,kBAAM/I,GAC3BgF,eAAgBqD,EAAQrD,eACxBgE,qBAAsB,kBAAM9F,EAAe,yBAC3C+F,cAAe5F,EAAM,iBAAiB,iBACpB,gDACP9L,MAAMkR,KAAK/H,EAAMpJ,QAEjB+Q,EAAQY,oBAARZ,gBAGX/C,SAAUjC,EAAM,YAAY,eACtB3C,EAAMgF,IAAIZ,GAAW,OAAOpE,EAAM0E,IAAIN,MACtCA,EAAS9D,WAAW,QAAS,CAAC,IAC1B8H,EAAeR,MAASxD,EAASlC,QAAQ,IAAK,IAC9CzL,EAASkR,EAAQ/C,SAASwD,OAC3B3R,EAAQ,CAAC,IACN+Q,EAAOG,EAAQY,cAAcX,SAC7B,IAAIlF,uCACyB0F,qKAA4KZ,cAG1M/Q,SAEFkR,EAAQ/C,SAASR,MAE1BoE,YAAa,mBACPxI,EAAMgF,IAAIzL,GAAcA,EACrBoO,EAAQa,YAAYjP,IAE7BiL,QAAS,KACTK,2BAA0BA,EAC1B4D,MAAO,kBAAMjG,EAAe,UAC5ByC,UAAW,SAACb,EAAU2B,GACpB/F,EAAMuC,IAAI6B,EAAU2B,8BA3FG/F,SACpB,CACL6C,KAAM,GACNgF,gBAAiB,kBAAMrF,EAAe,oBAEtCsF,gBAAiBnF,EAAM,mBAAmB,mBACjC9L,MAAMkR,KAAK/H,EAAMpJ,QAAQoR,MAAK,mBAAQzO,EAAK+G,WAAW2H,SAE/DC,KAAM,kBAAM1F,EAAe,SAC3B2F,WAAYxF,EAAM,cAAc,mBAAY3C,EAAMgF,IAAIZ,IAAapE,EAAMgF,IAAIlB,EAAOM,OACpFiE,oBAAqB,iBAAM,KAC3B/D,eAAgB,iBAAM,IACtBgE,qBAAsB,kBAAM9F,EAAe,yBAC3C+F,cAAe5F,EAAM,iBAAiB,kBAA4B,MAAdsF,EAAoBpR,MAAMkR,KAAK/H,EAAMpJ,QAAU,MACnGgO,SAAUjC,EAAM,YAAY,mBAAY3C,EAAM0E,IAAIN,IAAapE,EAAM0E,IAAIZ,EAAOM,OAChFoE,YAAa,mBAAQjP,GACrBiL,QAAS,KACTK,2BAA0BA,EAC1B4D,MAAO,kBAAMjG,EAAe,UAC5ByC,UAAW,SAACb,EAAU2B,GACpB/F,EAAMuC,IAAI6B,EAAU2B,uHA/VxB/B,EACAmB,EACA/N,EACA+B,EACAiM,YADAjM,MAAmC,QAG7BuP,OAA0BhQ,EAAuBtB,MAAQ+B,KAEnB+L,EAC1ClB,EACAmB,EACAuD,EACAtR,EACAgO,GAL2BN,eAOvB6D,EAAkBvR,EAAGwR,wBAPnBpD,qBAQFqD,EAAcF,EAAgBG,mCAEhCD,EAAYvS,OAAQ,CAAC,IACjB4N,EAAeH,EAA0BC,EAAK7K,EAAiB/B,SAC/D,IAAIsL,MAAMtL,EAAG2R,kBAAkBF,EAAa3E,EAAaA,qBAG1D,CACLF,MACA2E,kBACAlE,cAAe,mCAAYkE,EAAgBK,iCAAhBL,EAA8BlE,cAAcL,IAEvE6E,WAAY,SAAC7E,EAAUjC,GACrB2C,EAAW1N,EAAGuN,iBAAiBP,EAAUjC,EAASuG,EAAmB9P,aAEvEkM,WAAY,SAACV,EAAUjC,EAAS+G,OACxBC,EAAiBR,EAAgBK,aAAcvE,cAAcL,OAC9D+E,QACG,IAAIzG,MAAM,kCAAoC0B,OAEhDgF,EAAmBD,EAAe/S,KAGlCiT,EAAeH,UAAmB9R,EAAGkS,eAAe,EAAGF,EAAiB9S,QACxEiT,EACJH,EAAiBlI,MAAM,EAAGmI,EAAapT,OACvCkM,EACAiH,EAAiBlI,MAAMmI,EAAapT,MAAQoT,EAAa/S,QACrDkT,EAAgBpS,EAAGqS,iBAAiBN,EAAgBI,EAAS,CACjEtM,KAAMoM,EACNK,UAAWvH,EAAQ7L,SAGrBwO,EAAW0E,4C,wDElFfnG,EAAOsG,QAAUxR,EAAQ,S,sBCJ3B,YA0BA,SAASyR,EAAeC,EAAOC,GAI7B,IAFA,IAAIC,EAAK,EAEAnU,EAAIiU,EAAMvT,OAAS,EAAGV,GAAK,EAAGA,IAAK,CAC1C,IAAIoU,EAAOH,EAAMjU,GAEJ,MAAToU,EACFH,EAAMI,OAAOrU,EAAG,GACE,OAAToU,GACTH,EAAMI,OAAOrU,EAAG,GAChBmU,KACSA,IACTF,EAAMI,OAAOrU,EAAG,GAChBmU,KAKJ,GAAID,EACF,KAAOC,IAAMA,EACXF,EAAMK,QAAQ,MAIlB,OAAOL,EAyPT,SAASxJ,EAAO8J,EAAI3N,GAClB,GAAI2N,EAAG9J,OAAQ,OAAO8J,EAAG9J,OAAO7D,GAGhC,IAFA,IAAIsG,EAAM,GAEDlN,EAAI,EAAGA,EAAIuU,EAAG7T,OAAQV,IACzB4G,EAAE2N,EAAGvU,GAAIA,EAAGuU,IAAKrH,EAAId,KAAKmI,EAAGvU,IAGnC,OAAOkN,EA5PT6G,EAAQ3C,QAAU,WAIhB,IAHA,IAAIoD,EAAe,GACfC,GAAmB,EAEdzU,EAAI0U,UAAUhU,OAAS,EAAGV,IAAM,IAAMyU,EAAkBzU,IAAK,CACpE,IAAI2D,EAAO3D,GAAK,EAAI0U,UAAU1U,GAAKX,EAAQsV,MAE3C,GAAoB,iBAAThR,EACT,MAAM,IAAIiR,UAAU,6CACVjR,IAIZ6Q,EAAe7Q,EAAO,IAAM6Q,EAC5BC,EAAsC,MAAnB9Q,EAAKkR,OAAO,IASjC,OAAQJ,EAAmB,IAAM,KAHjCD,EAAeR,EAAevJ,EAAO+J,EAAaM,MAAM,MAAM,SAAUC,GACtE,QAASA,MACNN,GAAkB1I,KAAK,OAC2B,KAKzDgI,EAAQiB,UAAY,SAAUrR,GAC5B,IAAIsR,EAAalB,EAAQkB,WAAWtR,GAChCuR,EAAqC,MAArBC,EAAOxR,GAAO,GAclC,OAZAA,EAAOqQ,EAAevJ,EAAO9G,EAAKmR,MAAM,MAAM,SAAUC,GACtD,QAASA,MACNE,GAAYlJ,KAAK,OAERkJ,IACZtR,EAAO,KAGLA,GAAQuR,IACVvR,GAAQ,MAGFsR,EAAa,IAAM,IAAMtR,GAInCoQ,EAAQkB,WAAa,SAAUtR,GAC7B,MAA0B,MAAnBA,EAAKkR,OAAO,IAIrBd,EAAQhI,KAAO,WACb,IAAIqJ,EAAQnU,MAAMoU,UAAU/J,MAAMgK,KAAKZ,UAAW,GAClD,OAAOX,EAAQiB,UAAUvK,EAAO2K,GAAO,SAAUL,EAAG1P,GAClD,GAAiB,iBAAN0P,EACT,MAAM,IAAIH,UAAU,0CAGtB,OAAOG,KACNhJ,KAAK,OAKVgI,EAAQwB,SAAW,SAAUpD,EAAMqD,GAIjC,SAASC,EAAK/P,GAGZ,IAFA,IAAIrF,EAAQ,EAELA,EAAQqF,EAAIhF,QACE,KAAfgF,EAAIrF,GADiBA,KAM3B,IAFA,IAAIqV,EAAMhQ,EAAIhF,OAAS,EAEhBgV,GAAO,GACK,KAAbhQ,EAAIgQ,GADOA,KAIjB,OAAIrV,EAAQqV,EAAY,GACjBhQ,EAAI4F,MAAMjL,EAAOqV,EAAMrV,EAAQ,GAjBxC8R,EAAO4B,EAAQ3C,QAAQe,GAAMgD,OAAO,GACpCK,EAAKzB,EAAQ3C,QAAQoE,GAAIL,OAAO,GAwBhC,IALA,IAAIQ,EAAYF,EAAKtD,EAAK2C,MAAM,MAC5Bc,EAAUH,EAAKD,EAAGV,MAAM,MACxBpU,EAAS2K,KAAKwK,IAAIF,EAAUjV,OAAQkV,EAAQlV,QAC5CoV,EAAkBpV,EAEbV,EAAI,EAAGA,EAAIU,EAAQV,IAC1B,GAAI2V,EAAU3V,KAAO4V,EAAQ5V,GAAI,CAC/B8V,EAAkB9V,EAClB,MAIJ,IAAI+V,EAAc,GAElB,IAAS/V,EAAI8V,EAAiB9V,EAAI2V,EAAUjV,OAAQV,IAClD+V,EAAY3J,KAAK,MAInB,OADA2J,EAAcA,EAAY5J,OAAOyJ,EAAQtK,MAAMwK,KAC5B/J,KAAK,MAG1BgI,EAAQiC,IAAM,IACdjC,EAAQkC,UAAY,IAEpBlC,EAAQlC,QAAU,SAAUlO,GAE1B,GADoB,iBAATA,IAAmBA,GAAc,IACxB,IAAhBA,EAAKjD,OAAc,MAAO,IAQ9B,IAPA,IAAI0B,EAAOuB,EAAKuS,WAAW,GACvBC,EAAmB,KAAT/T,EAGVsT,GAAO,EACPU,GAAe,EAEVpW,EAAI2D,EAAKjD,OAAS,EAAGV,GAAK,IAAKA,EAGtC,GAAa,MAFboC,EAAOuB,EAAKuS,WAAWlW,KAKnB,IAAKoW,EAAc,CACjBV,EAAM1V,EACN,YAIJoW,GAAe,EAInB,OAAa,IAATV,EAAmBS,EAAU,IAAM,IAEnCA,GAAmB,IAART,EAGN,IAGF/R,EAAK2H,MAAM,EAAGoK,IAkCvB3B,EAAQsC,SAAW,SAAU1S,EAAM2S,GACjC,IAAI1P,EAhCN,SAAkBjD,GACI,iBAATA,IAAmBA,GAAc,IAC5C,IAGI3D,EAHAK,EAAQ,EACRqV,GAAO,EACPU,GAAe,EAGnB,IAAKpW,EAAI2D,EAAKjD,OAAS,EAAGV,GAAK,IAAKA,EAClC,GAA2B,KAAvB2D,EAAKuS,WAAWlW,IAKhB,IAAKoW,EAAc,CACjB/V,EAAQL,EAAI,EACZ,YAEgB,IAAT0V,IAGXU,GAAe,EACfV,EAAM1V,EAAI,GAId,OAAa,IAAT0V,EAAmB,GAChB/R,EAAK2H,MAAMjL,EAAOqV,GAMjBW,CAAS1S,GAMjB,OAJI2S,GAAO1P,EAAEuO,QAAQ,EAAImB,EAAI5V,UAAY4V,IACvC1P,EAAIA,EAAEuO,OAAO,EAAGvO,EAAElG,OAAS4V,EAAI5V,SAG1BkG,GAGTmN,EAAQrH,QAAU,SAAU/I,GACN,iBAATA,IAAmBA,GAAc,IAS5C,IARA,IAAI4S,GAAY,EACZC,EAAY,EACZd,GAAO,EACPU,GAAe,EAGfK,EAAc,EAETzW,EAAI2D,EAAKjD,OAAS,EAAGV,GAAK,IAAKA,EAAG,CACzC,IAAIoC,EAAOuB,EAAKuS,WAAWlW,GAE3B,GAAa,KAAToC,GAaS,IAATsT,IAGFU,GAAe,EACfV,EAAM1V,EAAI,GAGC,KAAToC,GAIkB,IAAdmU,EAAiBA,EAAWvW,EAA2B,IAAhByW,IAAmBA,EAAc,IACrD,IAAdF,IAGXE,GAAe,QAvBb,IAAKL,EAAc,CACjBI,EAAYxW,EAAI,EAChB,OAyBR,OAAkB,IAAduW,IAA4B,IAATb,GACP,IAAhBe,GACgB,IAAhBA,GAAqBF,IAAab,EAAM,GAAKa,IAAaC,EAAY,EAC7D,GAGF7S,EAAK2H,MAAMiL,EAAUb,IAe9B,IAAIP,EAA6B,MAApB,KAAKA,QAAQ,GAAa,SAAUrP,EAAKzF,EAAOqW,GAC3D,OAAO5Q,EAAIqP,OAAO9U,EAAOqW,IACvB,SAAU5Q,EAAKzF,EAAOqW,GAExB,OADIrW,EAAQ,IAAGA,EAAQyF,EAAIpF,OAASL,GAC7ByF,EAAIqP,OAAO9U,EAAOqW,M,yCC5T3B3C,EAAQ4C,SAAW,SAAU3W,EAAG8H,EAAGiB,GACjC,IAAI0I,EACJ,YAAO,IAAW3J,IAAMA,EAAI,SAAK,IAAWiB,IAAMA,EAAI,CACpD6N,aAAa,IACX,WACF,IAAK,IAAIC,EAAI,GAAIjR,EAAI8O,UAAUhU,OAAQkF,KACrCiR,EAAEjR,GAAK8O,UAAU9O,GAGnB,IAAI+D,EAAImN,KACJC,EAAIhO,EAAE6N,kBAAe,IAAWnF,OACpC,IAAWA,GAAKuF,aAAavF,GAAIA,EAAIwF,YAAW,WAC9CxF,OAAI,EAAQ1I,EAAE6N,aAAe5W,EAAEkX,MAAMvN,EAAGkN,KACvC/O,GAAIiP,GAAK/W,EAAEkX,MAAMvN,EAAGkN","file":"17821066377c4486a980330106160c805ea5b4a9-f845fceaeb86964d0f44.js","sourcesContent":["export function escapeHtml(text: string) {\n  return text.replace(/</g, \"&lt;\")\n}\n\nexport function strrep(text: string, count: number) {\n  let s = \"\"\n  for (let i = 0; i < count; i++) {\n    s += text\n  }\n  return s\n}\n\nexport function textToAnchorName(text: string) {\n  return text\n    .toLowerCase()\n    .replace(/ /g, \"-\")\n    .replace(/`|#|\\//g, \"\")\n}\n\nexport function fileNameToUrlName(s: string) {\n  return s.replace(/ /g, \"-\").replace(/#/g, \"sharp\").toLowerCase()\n}\n\nexport function parsePrimitive(value: string, type: string): any {\n  switch (type) {\n    case \"number\":\n      return +value\n    case \"string\":\n      return value\n    case \"boolean\":\n      return value.toLowerCase() === \"true\" || value.length === 0\n  }\n\n  throw new Error(`Unknown primitive type ${type} with - ${value}`)\n}\n\nexport function cleanMarkdownEscaped(code: string) {\n  code = code.replace(/¨D/g, \"$\")\n  code = code.replace(/¨T/g, \"~\")\n  return code\n}\n\nexport function typesToExtension(types: string) {\n  switch (types) {\n    case \"js\":\n      return \"js\"\n    case \"javascript\":\n      return \"js\"\n    case \"ts\":\n      return \"ts\"\n    case \"typescript\":\n      return \"ts\"\n    case \"tsx\":\n      return \"tsx\"\n    case \"jsn\":\n      return \"json\"\n  }\n  throw new Error(\"Cannot handle the file extension:\" + types)\n}\n\nexport function getIdentifierTextSpans(ts: typeof import(\"typescript\"), sourceFile: import(\"typescript\").SourceFile) {\n  const textSpans: { span: import(\"typescript\").TextSpan; text: string }[] = []\n  checkChildren(sourceFile)\n  return textSpans\n\n  function checkChildren(node: import(\"typescript\").Node) {\n    ts.forEachChild(node, child => {\n      if (ts.isIdentifier(child)) {\n        const start = child.getStart(sourceFile, false)\n        textSpans.push({ span: ts.createTextSpan(start, child.end - start), text: child.getText(sourceFile) })\n      }\n      checkChildren(child)\n    })\n  }\n}\n\nexport function stringAroundIndex(string: string, index: number) {\n  const arr = [\n    string[index - 3],\n    string[index - 2],\n    string[index - 1],\n    \">\",\n    string[index],\n    \"<\",\n    string[index + 1],\n    string[index + 2],\n    string[index + 3],\n  ]\n  return arr.filter(Boolean).join(\"\")\n}\n\n/** Came from https://ourcodeworld.com/articles/read/223/how-to-retrieve-the-closest-word-in-a-string-with-a-given-index-in-javascript */\nexport function getClosestWord(str: string, pos: number) {\n  // Make copies\n  str = String(str)\n  pos = Number(pos) >>> 0\n\n  // Search for the word's beginning and end.\n  var left = str.slice(0, pos + 1).search(/\\S+$/),\n    right = str.slice(pos).search(/\\s/)\n\n  // The last word in the string is a special case.\n  if (right < 0) {\n    return {\n      word: str.slice(left),\n      startPos: left,\n    }\n  }\n  // Return the word, using the located bounds to extract it from the string.\n  return {\n    word: str.slice(left, right + pos),\n    startPos: left,\n  }\n}\n","type System = import(\"typescript\").System\ntype CompilerOptions = import(\"typescript\").CompilerOptions\ntype CustomTransformers = import(\"typescript\").CustomTransformers\ntype LanguageServiceHost = import(\"typescript\").LanguageServiceHost\ntype CompilerHost = import(\"typescript\").CompilerHost\ntype SourceFile = import(\"typescript\").SourceFile\ntype TS = typeof import(\"typescript\")\n\nlet hasLocalStorage = false\ntry {\n  hasLocalStorage = typeof localStorage !== `undefined`\n} catch (error) {}\n\nconst hasProcess = typeof process !== `undefined`\nconst shouldDebug = (hasLocalStorage && localStorage.getItem(\"DEBUG\")) || (hasProcess && process.env.DEBUG)\nconst debugLog = shouldDebug ? console.log : (_message?: any, ..._optionalParams: any[]) => \"\"\n\nexport interface VirtualTypeScriptEnvironment {\n  sys: System\n  languageService: import(\"typescript\").LanguageService\n  getSourceFile: (fileName: string) => import(\"typescript\").SourceFile | undefined\n  createFile: (fileName: string, content: string) => void\n  updateFile: (fileName: string, content: string, replaceTextSpan?: import(\"typescript\").TextSpan) => void\n}\n\n/**\n * Makes a virtual copy of the TypeScript environment. This is the main API you want to be using with\n * @typescript/vfs. A lot of the other exposed functions are used by this function to get set up.\n *\n * @param sys an object which conforms to the TS Sys (a shim over read/write access to the fs)\n * @param rootFiles a list of files which are considered inside the project\n * @param ts a copy pf the TypeScript module\n * @param compilerOptions the options for this compiler run\n * @param customTransformers custom transformers for this compiler run\n */\n\nexport function createVirtualTypeScriptEnvironment(\n  sys: System,\n  rootFiles: string[],\n  ts: TS,\n  compilerOptions: CompilerOptions = {},\n  customTransformers?: CustomTransformers\n): VirtualTypeScriptEnvironment {\n  const mergedCompilerOpts = { ...defaultCompilerOptions(ts), ...compilerOptions }\n\n  const { languageServiceHost, updateFile } = createVirtualLanguageServiceHost(\n    sys,\n    rootFiles,\n    mergedCompilerOpts,\n    ts,\n    customTransformers\n  )\n  const languageService = ts.createLanguageService(languageServiceHost)\n  const diagnostics = languageService.getCompilerOptionsDiagnostics()\n\n  if (diagnostics.length) {\n    const compilerHost = createVirtualCompilerHost(sys, compilerOptions, ts)\n    throw new Error(ts.formatDiagnostics(diagnostics, compilerHost.compilerHost))\n  }\n\n  return {\n    sys,\n    languageService,\n    getSourceFile: fileName => languageService.getProgram()?.getSourceFile(fileName),\n\n    createFile: (fileName, content) => {\n      updateFile(ts.createSourceFile(fileName, content, mergedCompilerOpts.target!, false))\n    },\n    updateFile: (fileName, content, optPrevTextSpan) => {\n      const prevSourceFile = languageService.getProgram()!.getSourceFile(fileName)\n      if (!prevSourceFile) {\n        throw new Error(\"Did not find a source file for \" + fileName)\n      }\n      const prevFullContents = prevSourceFile.text\n\n      // TODO: Validate if the default text span has a fencepost error?\n      const prevTextSpan = optPrevTextSpan ?? ts.createTextSpan(0, prevFullContents.length)\n      const newText =\n        prevFullContents.slice(0, prevTextSpan.start) +\n        content +\n        prevFullContents.slice(prevTextSpan.start + prevTextSpan.length)\n      const newSourceFile = ts.updateSourceFile(prevSourceFile, newText, {\n        span: prevTextSpan,\n        newLength: content.length,\n      })\n\n      updateFile(newSourceFile)\n    },\n  }\n}\n\n/**\n * Grab the list of lib files for a particular target, will return a bit more than necessary (by including\n * the dom) but that's OK\n *\n * @param target The compiler settings target baseline\n * @param ts A copy of the TypeScript module\n */\nexport const knownLibFilesForCompilerOptions = (compilerOptions: CompilerOptions, ts: TS) => {\n  const target = compilerOptions.target || ts.ScriptTarget.ES5\n  const lib = compilerOptions.lib || []\n\n  const files = [\n    \"lib.d.ts\",\n    \"lib.dom.d.ts\",\n    \"lib.dom.iterable.d.ts\",\n    \"lib.webworker.d.ts\",\n    \"lib.webworker.importscripts.d.ts\",\n    \"lib.scripthost.d.ts\",\n    \"lib.es5.d.ts\",\n    \"lib.es6.d.ts\",\n    \"lib.es2015.collection.d.ts\",\n    \"lib.es2015.core.d.ts\",\n    \"lib.es2015.d.ts\",\n    \"lib.es2015.generator.d.ts\",\n    \"lib.es2015.iterable.d.ts\",\n    \"lib.es2015.promise.d.ts\",\n    \"lib.es2015.proxy.d.ts\",\n    \"lib.es2015.reflect.d.ts\",\n    \"lib.es2015.symbol.d.ts\",\n    \"lib.es2015.symbol.wellknown.d.ts\",\n    \"lib.es2016.array.include.d.ts\",\n    \"lib.es2016.d.ts\",\n    \"lib.es2016.full.d.ts\",\n    \"lib.es2017.d.ts\",\n    \"lib.es2017.full.d.ts\",\n    \"lib.es2017.intl.d.ts\",\n    \"lib.es2017.object.d.ts\",\n    \"lib.es2017.sharedmemory.d.ts\",\n    \"lib.es2017.string.d.ts\",\n    \"lib.es2017.typedarrays.d.ts\",\n    \"lib.es2018.asyncgenerator.d.ts\",\n    \"lib.es2018.asynciterable.d.ts\",\n    \"lib.es2018.d.ts\",\n    \"lib.es2018.full.d.ts\",\n    \"lib.es2018.intl.d.ts\",\n    \"lib.es2018.promise.d.ts\",\n    \"lib.es2018.regexp.d.ts\",\n    \"lib.es2019.array.d.ts\",\n    \"lib.es2019.d.ts\",\n    \"lib.es2019.full.d.ts\",\n    \"lib.es2019.object.d.ts\",\n    \"lib.es2019.string.d.ts\",\n    \"lib.es2019.symbol.d.ts\",\n    \"lib.es2020.d.ts\",\n    \"lib.es2020.full.d.ts\",\n    \"lib.es2020.string.d.ts\",\n    \"lib.es2020.symbol.wellknown.d.ts\",\n    \"lib.es2020.bigint.d.ts\",\n    \"lib.es2020.promise.d.ts\",\n    \"lib.es2020.sharedmemory.d.ts\",\n    \"lib.es2020.intl.d.ts\",\n    \"lib.esnext.array.d.ts\",\n    \"lib.esnext.asynciterable.d.ts\",\n    \"lib.esnext.bigint.d.ts\",\n    \"lib.esnext.d.ts\",\n    \"lib.esnext.full.d.ts\",\n    \"lib.esnext.intl.d.ts\",\n    \"lib.esnext.symbol.d.ts\",\n  ]\n\n  const targetToCut = ts.ScriptTarget[target]\n  const matches = files.filter(f => f.startsWith(`lib.${targetToCut.toLowerCase()}`))\n  const targetCutIndex = files.indexOf(matches.pop()!)\n\n  const getMax = (array: number[]) =>\n    array && array.length ? array.reduce((max, current) => (current > max ? current : max)) : undefined\n\n  // Find the index for everything in\n  const indexesForCutting = lib.map(lib => {\n    const matches = files.filter(f => f.startsWith(`lib.${lib.toLowerCase()}`))\n    if (matches.length === 0) return 0\n\n    const cutIndex = files.indexOf(matches.pop()!)\n    return cutIndex\n  })\n\n  const libCutIndex = getMax(indexesForCutting) || 0\n\n  const finalCutIndex = Math.max(targetCutIndex, libCutIndex)\n  return files.slice(0, finalCutIndex + 1)\n}\n\n/**\n * Sets up a Map with lib contents by grabbing the necessary files from\n * the local copy of typescript via the file system.\n */\nexport const createDefaultMapFromNodeModules = (compilerOptions: CompilerOptions, ts?: typeof import(\"typescript\")) => {\n  const tsModule = ts || require(\"typescript\")\n  const path = require(\"path\")\n  const fs = require(\"fs\")\n\n  const getLib = (name: string) => {\n    const lib = path.dirname(require.resolve(\"typescript\"))\n    return fs.readFileSync(path.join(lib, name), \"utf8\")\n  }\n\n  const libs = knownLibFilesForCompilerOptions(compilerOptions, tsModule)\n  const fsMap = new Map<string, string>()\n  libs.forEach(lib => {\n    fsMap.set(\"/\" + lib, getLib(lib))\n  })\n  return fsMap\n}\n\n/**\n * Adds recursively files from the FS into the map based on the folder\n */\nexport const addAllFilesFromFolder = (map: Map<string, string>, workingDir: string): void => {\n  const path = require(\"path\")\n  const fs = require(\"fs\")\n\n  const walk = function (dir: string) {\n    let results: string[] = []\n    const list = fs.readdirSync(dir)\n    list.forEach(function (file: string) {\n      file = path.join(dir, file)\n      const stat = fs.statSync(file)\n      if (stat && stat.isDirectory()) {\n        /* Recurse into a subdirectory */\n        results = results.concat(walk(file))\n      } else {\n        /* Is a file */\n        results.push(file)\n      }\n    })\n    return results\n  }\n\n  const allFiles = walk(workingDir)\n\n  allFiles.forEach(lib => {\n    const fsPath = \"/node_modules/@types\" + lib.replace(workingDir, \"\")\n    const content = fs.readFileSync(lib, \"utf8\")\n    const validExtensions = [\".ts\", \".tsx\"]\n\n    if (validExtensions.includes(path.extname(fsPath))) {\n      map.set(fsPath, content)\n    }\n  })\n}\n\n/** Adds all files from node_modules/@types into the FS Map */\nexport const addFilesForTypesIntoFolder = (map: Map<string, string>) =>\n  addAllFilesFromFolder(map, \"node_modules/@types\")\n\n/**\n * Create a virtual FS Map with the lib files from a particular TypeScript\n * version based on the target, Always includes dom ATM.\n *\n * @param options The compiler target, which dictates the libs to set up\n * @param version the versions of TypeScript which are supported\n * @param cache should the values be stored in local storage\n * @param ts a copy of the typescript import\n * @param lzstring an optional copy of the lz-string import\n * @param fetcher an optional replacement for the global fetch function (tests mainly)\n * @param storer an optional replacement for the localStorage global (tests mainly)\n */\nexport const createDefaultMapFromCDN = (\n  options: CompilerOptions,\n  version: string,\n  cache: boolean,\n  ts: TS,\n  lzstring?: typeof import(\"lz-string\"),\n  fetcher?: typeof fetch,\n  storer?: typeof localStorage\n) => {\n  const fetchlike = fetcher || fetch\n  const storelike = storer || localStorage\n  const fsMap = new Map<string, string>()\n  const files = knownLibFilesForCompilerOptions(options, ts)\n  const prefix = `https://typescript.azureedge.net/cdn/${version}/typescript/lib/`\n\n  function zip(str: string) {\n    return lzstring ? lzstring.compressToUTF16(str) : str\n  }\n\n  function unzip(str: string) {\n    return lzstring ? lzstring.decompressFromUTF16(str) : str\n  }\n\n  // Map the known libs to a node fetch promise, then return the contents\n  function uncached() {\n    return Promise.all(files.map(lib => fetchlike(prefix + lib).then(resp => resp.text()))).then(contents => {\n      contents.forEach((text, index) => fsMap.set(\"/\" + files[index], text))\n    })\n  }\n\n  // A localstorage and lzzip aware version of the lib files\n  function cached() {\n    const keys = Object.keys(localStorage)\n    keys.forEach(key => {\n      // Remove anything which isn't from this version\n      if (key.startsWith(\"ts-lib-\") && !key.startsWith(\"ts-lib-\" + version)) {\n        storelike.removeItem(key)\n      }\n    })\n\n    return Promise.all(\n      files.map(lib => {\n        const cacheKey = `ts-lib-${version}-${lib}`\n        const content = storelike.getItem(cacheKey)\n\n        if (!content) {\n          // Make the API call and store the text concent in the cache\n          return fetchlike(prefix + lib)\n            .then(resp => resp.text())\n            .then(t => {\n              storelike.setItem(cacheKey, zip(t))\n              return t\n            })\n        } else {\n          return Promise.resolve(unzip(content))\n        }\n      })\n    ).then(contents => {\n      contents.forEach((text, index) => {\n        const name = \"/\" + files[index]\n        fsMap.set(name, text)\n      })\n    })\n  }\n\n  const func = cache ? cached : uncached\n  return func().then(() => fsMap)\n}\n\nfunction notImplemented(methodName: string): any {\n  throw new Error(`Method '${methodName}' is not implemented.`)\n}\n\nfunction audit<ArgsT extends any[], ReturnT>(\n  name: string,\n  fn: (...args: ArgsT) => ReturnT\n): (...args: ArgsT) => ReturnT {\n  return (...args) => {\n    const res = fn(...args)\n\n    const smallres = typeof res === \"string\" ? res.slice(0, 80) + \"...\" : res\n    debugLog(\"> \" + name, ...args)\n    debugLog(\"< \" + smallres)\n\n    return res\n  }\n}\n\n/** The default compiler options if TypeScript could ever change the compiler options */\nconst defaultCompilerOptions = (ts: typeof import(\"typescript\")): CompilerOptions => {\n  return {\n    ...ts.getDefaultCompilerOptions(),\n    jsx: ts.JsxEmit.React,\n    strict: true,\n    esModuleInterop: true,\n    module: ts.ModuleKind.ESNext,\n    suppressOutputPathCheck: true,\n    skipLibCheck: true,\n    skipDefaultLibCheck: true,\n    moduleResolution: ts.ModuleResolutionKind.NodeJs,\n  }\n}\n\n// \"/DOM.d.ts\" => \"/lib.dom.d.ts\"\nconst libize = (path: string) => path.replace(\"/\", \"/lib.\").toLowerCase()\n\n/**\n * Creates an in-memory System object which can be used in a TypeScript program, this\n * is what provides read/write aspects of the virtual fs\n */\nexport function createSystem(files: Map<string, string>): System {\n  return {\n    args: [],\n    createDirectory: () => notImplemented(\"createDirectory\"),\n    // TODO: could make a real file tree\n    directoryExists: audit(\"directoryExists\", directory => {\n      return Array.from(files.keys()).some(path => path.startsWith(directory))\n    }),\n    exit: () => notImplemented(\"exit\"),\n    fileExists: audit(\"fileExists\", fileName => files.has(fileName) || files.has(libize(fileName))),\n    getCurrentDirectory: () => \"/\",\n    getDirectories: () => [],\n    getExecutingFilePath: () => notImplemented(\"getExecutingFilePath\"),\n    readDirectory: audit(\"readDirectory\", directory => (directory === \"/\" ? Array.from(files.keys()) : [])),\n    readFile: audit(\"readFile\", fileName => files.get(fileName) || files.get(libize(fileName))),\n    resolvePath: path => path,\n    newLine: \"\\n\",\n    useCaseSensitiveFileNames: true,\n    write: () => notImplemented(\"write\"),\n    writeFile: (fileName, contents) => {\n      files.set(fileName, contents)\n    },\n  }\n}\n\n/**\n * Creates a file-system backed System object which can be used in a TypeScript program, you provide\n * a set of virtual files which are prioritised over the FS versions, then a path to the root of your\n * project (basically the folder your node_modules lives)\n */\nexport function createFSBackedSystem(files: Map<string, string>, _projectRoot: string, ts: TS): System {\n  // We need to make an isolated folder for the tsconfig, but also need to be able to resolve the\n  // existing node_modules structures going back through the history\n  const root = _projectRoot + \"/vfs\"\n  const path = require(\"path\")\n\n  // The default System in TypeScript\n  const nodeSys = ts.sys\n  const tsLib = path.dirname(require.resolve(\"typescript\"))\n\n  return {\n    args: [],\n    createDirectory: () => notImplemented(\"createDirectory\"),\n    // TODO: could make a real file tree\n    directoryExists: audit(\"directoryExists\", directory => {\n      return Array.from(files.keys()).some(path => path.startsWith(directory)) || nodeSys.directoryExists(directory)\n    }),\n    exit: nodeSys.exit,\n    fileExists: audit(\"fileExists\", fileName => {\n      if (files.has(fileName)) return true\n      // Don't let other tsconfigs end up touching the vfs\n      if (fileName.includes(\"tsconfig.json\") || fileName.includes(\"tsconfig.json\")) return false\n      if (fileName.startsWith(\"/lib\")) {\n        const tsLibName = `${tsLib}/${fileName.replace(\"/\", \"\")}`\n        return nodeSys.fileExists(tsLibName)\n      }\n      return nodeSys.fileExists(fileName)\n    }),\n    getCurrentDirectory: () => root,\n    getDirectories: nodeSys.getDirectories,\n    getExecutingFilePath: () => notImplemented(\"getExecutingFilePath\"),\n    readDirectory: audit(\"readDirectory\", (...args) => {\n      if (args[0] === \"/\") {\n        return Array.from(files.keys())\n      } else {\n        return nodeSys.readDirectory(...args)\n      }\n    }),\n    readFile: audit(\"readFile\", fileName => {\n      if (files.has(fileName)) return files.get(fileName)\n      if (fileName.startsWith(\"/lib\")) {\n        const tsLibName = `${tsLib}/${fileName.replace(\"/\", \"\")}`\n        const result = nodeSys.readFile(tsLibName)\n        if (!result) {\n          const libs = nodeSys.readDirectory(tsLib)\n          throw new Error(\n            `TSVFS: A request was made for ${tsLibName} but there wasn't a file found in the file map. You likely have a mismatch in the compiler options for the CDN download vs the compiler program. Existing Libs: ${libs}.`\n          )\n        }\n        return result\n      }\n      return nodeSys.readFile(fileName)\n    }),\n    resolvePath: path => {\n      if (files.has(path)) return path\n      return nodeSys.resolvePath(path)\n    },\n    newLine: \"\\n\",\n    useCaseSensitiveFileNames: true,\n    write: () => notImplemented(\"write\"),\n    writeFile: (fileName, contents) => {\n      files.set(fileName, contents)\n    },\n  }\n}\n\n/**\n * Creates an in-memory CompilerHost -which is essentially an extra wrapper to System\n * which works with TypeScript objects - returns both a compiler host, and a way to add new SourceFile\n * instances to the in-memory file system.\n */\nexport function createVirtualCompilerHost(sys: System, compilerOptions: CompilerOptions, ts: TS) {\n  const sourceFiles = new Map<string, SourceFile>()\n  const save = (sourceFile: SourceFile) => {\n    sourceFiles.set(sourceFile.fileName, sourceFile)\n    return sourceFile\n  }\n\n  type Return = {\n    compilerHost: CompilerHost\n    updateFile: (sourceFile: SourceFile) => boolean\n  }\n\n  const vHost: Return = {\n    compilerHost: {\n      ...sys,\n      getCanonicalFileName: fileName => fileName,\n      getDefaultLibFileName: () => \"/\" + ts.getDefaultLibFileName(compilerOptions), // '/lib.d.ts',\n      // getDefaultLibLocation: () => '/',\n      getDirectories: () => [],\n      getNewLine: () => sys.newLine,\n      getSourceFile: fileName => {\n        return (\n          sourceFiles.get(fileName) ||\n          save(\n            ts.createSourceFile(\n              fileName,\n              sys.readFile(fileName)!,\n              compilerOptions.target || defaultCompilerOptions(ts).target!,\n              false\n            )\n          )\n        )\n      },\n      useCaseSensitiveFileNames: () => sys.useCaseSensitiveFileNames,\n    },\n    updateFile: sourceFile => {\n      const alreadyExists = sourceFiles.has(sourceFile.fileName)\n      sys.writeFile(sourceFile.fileName, sourceFile.text)\n      sourceFiles.set(sourceFile.fileName, sourceFile)\n      return alreadyExists\n    },\n  }\n  return vHost\n}\n\n/**\n * Creates an object which can host a language service against the virtual file-system\n */\nexport function createVirtualLanguageServiceHost(\n  sys: System,\n  rootFiles: string[],\n  compilerOptions: CompilerOptions,\n  ts: TS,\n  customTransformers?: CustomTransformers\n) {\n  const fileNames = [...rootFiles]\n  const { compilerHost, updateFile } = createVirtualCompilerHost(sys, compilerOptions, ts)\n  const fileVersions = new Map<string, string>()\n  let projectVersion = 0\n  const languageServiceHost: LanguageServiceHost = {\n    ...compilerHost,\n    getProjectVersion: () => projectVersion.toString(),\n    getCompilationSettings: () => compilerOptions,\n    getCustomTransformers: () => customTransformers,\n    getScriptFileNames: () => fileNames,\n    getScriptSnapshot: fileName => {\n      const contents = sys.readFile(fileName)\n      if (contents) {\n        return ts.ScriptSnapshot.fromString(contents)\n      }\n      return\n    },\n    getScriptVersion: fileName => {\n      return fileVersions.get(fileName) || \"0\"\n    },\n    writeFile: sys.writeFile,\n  }\n\n  type Return = {\n    languageServiceHost: LanguageServiceHost\n    updateFile: (sourceFile: import(\"typescript\").SourceFile) => void\n  }\n\n  const lsHost: Return = {\n    languageServiceHost,\n    updateFile: sourceFile => {\n      projectVersion++\n      fileVersions.set(sourceFile.fileName, projectVersion.toString())\n      if (!fileNames.includes(sourceFile.fileName)) {\n        fileNames.push(sourceFile.fileName)\n      }\n      updateFile(sourceFile)\n    },\n  }\n  return lsHost\n}\n","/** To ensure that errors are matched up right */\nexport function validateCodeForErrors(\n  relevantErrors: import('typescript').Diagnostic[],\n  handbookOptions: { errors: number[] },\n  extension: string,\n  originalCode: string\n) {\n  const inErrsButNotFoundInTheHeader = relevantErrors.filter(e => !handbookOptions.errors.includes(e.code))\n  const errorsFound = inErrsButNotFoundInTheHeader.map(e => e.code).join(' ')\n\n  if (inErrsButNotFoundInTheHeader.length) {\n    const codeToAdd = `// @errors: ${relevantErrors.map(e => e.code).join(' ')}`\n    const postfix = handbookOptions.errors.length\n      ? ` - the annotation specified ${handbookOptions.errors}`\n      : '\\n\\nExpected:\\n' + codeToAdd\n\n    const afterMessage = inErrsButNotFoundInTheHeader\n      .map(e => {\n        const msg = typeof e.messageText === 'string' ? e.messageText : e.messageText.messageText\n        return `[${e.code}] - ${msg}`\n      })\n      .join('\\n  ')\n\n    const codeOutput = `\\n\\n## Code\\n\\n'''${extension}\\n${originalCode}\\n'''`\n    throw new Error(\n      `Errors were thrown in the sample, but not included in an errors tag: ${errorsFound}${postfix}\\n\\n  ${afterMessage}${codeOutput}`\n    )\n  }\n}\n\n/** Mainly to warn myself, I've lost a good few minutes to this before */\nexport function validateInput(code: string) {\n  if (code.includes('// @errors ')) {\n    throw new Error(\"You have '@errors ' - you're missing the colon after errors\")\n  }\n  if (code.includes('// @filename ')) {\n    throw new Error(\"You have '@filename ' - you're missing the colon after filename\")\n  }\n}\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./vfs.cjs.production.min.js')\n} else {\n  module.exports = require('./vfs.cjs.development.js')\n}\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  } // if the path is allowed to go above the root, restore leading ..s\n\n\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n} // path.resolve([from ...], to)\n// posix version\n\n\nexports.resolve = function () {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = i >= 0 ? arguments[i] : process.cwd(); // Skip empty and invalid entries\n\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  } // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n  // Normalize the path\n\n\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}; // path.normalize(path)\n// posix version\n\n\nexports.normalize = function (path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/'; // Normalize the path\n\n  path = normalizeArray(filter(path.split('/'), function (p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n}; // posix version\n\n\nexports.isAbsolute = function (path) {\n  return path.charAt(0) === '/';\n}; // posix version\n\n\nexports.join = function () {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function (p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n\n    return p;\n  }).join('/'));\n}; // path.relative(from, to)\n// posix version\n\n\nexports.relative = function (from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47\n  /*/*/\n  ;\n  var end = -1;\n  var matchedSlash = true;\n\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n} // Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\n\n\nexports.basename = function (path, ext) {\n  var f = basename(path);\n\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n\n  var preDotState = 0;\n\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n\n        continue;\n      }\n\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n\n    if (code === 46\n    /*.*/\n    ) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n  preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n\n  return path.slice(startDot, end);\n};\n\nfunction filter(xs, f) {\n  if (xs.filter) return xs.filter(f);\n  var res = [];\n\n  for (var i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) res.push(xs[i]);\n  }\n\n  return res;\n} // String.prototype.substr - negative index don't work in IE8\n\n\nvar substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {\n  return str.substr(start, len);\n} : function (str, start, len) {\n  if (start < 0) start = str.length + start;\n  return str.substr(start, len);\n};","exports.debounce = function (i, e, o) {\n  var t;\n  return void 0 === e && (e = 50), void 0 === o && (o = {\n    isImmediate: !1\n  }), function () {\n    for (var a = [], d = arguments.length; d--;) {\n      a[d] = arguments[d];\n    }\n\n    var n = this,\n        m = o.isImmediate && void 0 === t;\n    void 0 !== t && clearTimeout(t), t = setTimeout(function () {\n      t = void 0, o.isImmediate || i.apply(n, a);\n    }, e), m && i.apply(n, a);\n  };\n};"],"sourceRoot":""}